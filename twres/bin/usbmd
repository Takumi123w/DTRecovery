#!/bin/bash
terminal_height=$(stty size | cut -d ' ' -f 1)
readonly VIEW_HEIGHT=$((terminal_height - 6))

stty_orig="$(stty -g)"
trap 'stty "$stty_orig"; printf "\033c"' EXIT INT TERM

readonly REBOOT_MENU_BASE_OPTIONS=(
	"Back to main menu" "bash /twres/bin/main"
    "FastbootD" "fastboot_mode"
    "Sideload" "twrp sideload"
)

UDC_CONTROLLER="$(getprop sys.usb.controller)"

mtp_enable_force() {
    echo "--- Enabling MTP + ADB ---"
    
    echo "none" > /config/usb_gadget/g1/UDC 2>/dev/null
    stop adbd
    stop fastbootd
    
    echo "0x6860" > /config/usb_gadget/g1/idProduct
    echo "mtp,adb" > /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration
    
    rm -f /config/usb_gadget/g1/configs/b.1/f1
    rm -f /config/usb_gadget/g1/configs/b.1/ffs.mtp
    
    ln -s /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f1
    ln -s /config/usb_gadget/g1/functions/ffs.mtp /config/usb_gadget/g1/configs/b.1/ffs.mtp
    
    if [ -n "$UDC_CONTROLLER" ]; then
        echo "UDC CONTROLLER not found skip this"
    fi
    start adbd
    
    setprop sys.usb.config "mtp,adb"
    echo "MTP + ADB Enabled."
}

mtp_disable_force() {
    echo "--- Switching from MTP to ADB-only ---"
    
    echo "none" > /config/usb_gadget/g1/UDC 2>/dev/null
    stop fastbootd
    
    rm -f /config/usb_gadget/g1/configs/b.1/ffs.mtp
    
    echo "0xD001" > /config/usb_gadget/g1/idProduct
    echo "adb" > /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration
    
    rm -f /config/usb_gadget/g1/configs/b.1/f1
    ln -s /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f1
    
    if [ -n "$UDC_CONTROLLER" ]; then
        echo "UDC CONTROLLER not found skip this"
    fi

    setprop sys.usb.config "adb"
    echo "MTP Disabled. ADB Mode Enabled."
}

get_mtp_state() {
    local usb_config=$(getprop sys.usb.config)
    
    if echo "$usb_config" | grep -q "mtp"; then
        echo "Disable MTP (Enable ADB),mtp_disable_force"
    else
        echo "Enable MTP (MTP+ADB),mtp_enable_force"
    fi
}

fastboot_mode() {
    clear
    echo "--- Fastboot Mode Activation ---"
    
    local stty_orig="$(stty -g)"
    trap 'stty "$stty_orig"; printf "\033c"; return 0' INT TERM
    
    setprop sys.usb.config none

    mtp_disable_force

	setprop sys.usb.config none

	UDC_CONTROLLER="$(getprop sys.usb.controller)"
	if [ -z "$UDC_CONTROLLER" ]; then
		echo "UDC CONTROLLER not found skip this"
	fi

	echo "Set paramenter for fastboot..."
	echo "0xD001" > /config/usb_gadget/g1/idProduct
	echo "fastboot" > /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration

	rm -f /config/usb_gadget/g1/configs/b.1/f1
	rm -f /config/usb_gadget/g1/configs/b.1/ffs.mtp

	ln -s /config/usb_gadget/g1/functions/ffs.fastboot /config/usb_gadget/g1/configs/b.1/f1

	echo "This UDC CONTROLLER : $UDC_CONTROLLER"

	echo "$UDC_CONTROLLER" > /config/usb_gadget/g1/UDC

	setprop sys.usb.config fastboot
	start fastbootd


    echo "-----------------------------------"
    echo "**FastbootD Mode.**"
    echo "==================================="
    echo "**Press [power] or [power+vol-] to exit Fastboot Mode.**"
    
    while true; do
        stty -echo -icanon
        read -n 1 menu_key
        stty "$stty_orig"
        case "$menu_key" in
            l | $'\r' | $'\n' | q) break ;;
            *) stty -echo -icanon ;;
        esac
    done

    clear
    echo "Exiting Fastboot Mode. Cleaning up USB..."
    
    echo "none" > /config/usb_gadget/g1/UDC 2>/dev/null
    stop fastbootd
    
    setprop sys.usb.config "adb"
    
    stty "$stty_orig"
    return 0
}

main_reboot_menu() {
    
    local selected_index=0
    local REBOOT_MENU_OPTIONS=()
    local OPTION_COUNT=0
    
    while true; do
        
        local mtp_info=$(get_mtp_state)
        local MTP_STATUS=$(echo "$mtp_info" | cut -d ',' -f 1)
        local MTP_COMMAND=$(echo "$mtp_info" | cut -d ',' -f 2)

        REBOOT_MENU_OPTIONS=("${REBOOT_MENU_BASE_OPTIONS[@]}")
        REBOOT_MENU_OPTIONS+=("$MTP_STATUS" "$MTP_COMMAND")
        
        OPTION_COUNT=$(( ${#REBOOT_MENU_OPTIONS[@]} / 2 ))

        if [ "$selected_index" -ge "$OPTION_COUNT" ]; then
            selected_index=$((OPTION_COUNT - 1))
        fi
        
        printf "\033c"
        printf "_REBOOT/POWER MENU\n"
        printf "=================================\n"
        printf "Select action to perform:\n"

        for ((i=0; i < OPTION_COUNT; i++)); do
            local display_name="${REBOOT_MENU_OPTIONS[i*2]}"
            if [[ "$i" -eq "$selected_index" ]]; then
                printf "> \033[7m%s\033[0m\n" "$display_name"
            else
                printf "  %s\n" "$display_name"
            fi
        done
        
        local lines_printed="$OPTION_COUNT"
        for (( j = lines_printed; j < VIEW_HEIGHT; j++ )); do
            echo
        done

        printf "=================================\n"
        printf "[vol+] Up | [vol-] Down | [power] Select | [power+vol-] Quit\n"

        stty -echo -icanon
        read -n 1 menu_key
        stty "$stty_orig"

        case "$menu_key" in
            j)
                if [ "$selected_index" -lt "$((OPTION_COUNT - 1))" ]; then
                    selected_index=$((selected_index + 1))
                fi
                ;;
            k)
                if [ "$selected_index" -gt 0 ]; then
                    selected_index=$((selected_index - 1))
                fi
                ;;
            l | $'\r' | $'\n')
                local display_name="${REBOOT_MENU_OPTIONS[selected_index*2]}"
                local command="${REBOOT_MENU_OPTIONS[selected_index*2 + 1]}"
                
                printf "\033c"
                
                if [ "$command" = "exit" ]; then
                    echo "Exiting menu."
                    exit 0
                fi
                
                echo "Executing: $command"
                
                $command
                
                echo "Command returned. Waiting 2 seconds..."
                sleep 2
                ;;
            q)
                break
                ;;
        esac
    done
}

main_reboot_menu

exit 0