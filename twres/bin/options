#!/bin/bash

current_theme_wpset=0
current_navbar_state=0
current_clock_state=0
readonly THEME_FILE="/data/set_twrp.sh"

get_initial_theme_wpset() {
    
    if [[ -f "$THEME_FILE" ]]; then
        local file_content=$(cat "$THEME_FILE" 2>/dev/null)
        local current_wpset=$(echo "$file_content" | grep -oE '^twrp set wpset [0-2]$' | grep -oE '[0-2]$' | head -n 1)

        if [[ "$current_wpset" =~ ^[0-2]$ ]]; then
            local next_wpset=$(((current_wpset + 1) % 3))
            echo "$next_wpset"
            return
        fi
    fi
    
    echo 1
}

get_initial_navbar_state() {
    
    if [[ -f "$THEME_FILE" ]]; then
        local file_content=$(cat "$THEME_FILE" 2>/dev/null)
        local current_state=$(echo "$file_content" | grep -oE '^twrp set tw_samsung_navbar [0-1]$' | grep -oE '[0-1]$' | head -n 1)

        if [[ "$current_state" =~ ^[0-1]$ ]]; then
            local next_state=$(((current_state + 1) % 2))
            echo "$next_state"
            return
        fi
    fi
    
    echo 1
}

get_initial_clock_state() {
    
    if [[ -f "$THEME_FILE" ]]; then
        local file_content=$(cat "$THEME_FILE" 2>/dev/null)
        local current_state=$(echo "$file_content" | grep -oE '^twrp set tw_military_time [0-1]$' | grep -oE '[0-1]$' | head -n 1)

        if [[ "$current_state" =~ ^[0-1]$ ]]; then
            local next_state=$(((current_state + 1) % 2))
            echo "$next_state"
            return
        fi
    fi
    echo 1
}

current_theme_wpset=$(get_initial_theme_wpset)
current_navbar_state=$(get_initial_navbar_state)
current_clock_state=$(get_initial_clock_state)


terminal_height=$(stty size 2>/dev/null | cut -d ' ' -f 1)
readonly VIEW_HEIGHT=$((terminal_height - 6))

stty_orig="$(stty -g)"
trap 'stty "$stty_orig" 2>/dev/null; printf "\033c"' EXIT INT TERM

readonly REBOOT_MENU_OPTIONS=(
    "Change Theme" "theme_command"
    "Reverse Navbar" "navbar_command"
    "12/24 Clock" "clock_command"
)
readonly OPTION_COUNT=$(( ${#REBOOT_MENU_OPTIONS[@]} / 2 ))

theme_command() {
    local apply_wpset="$current_theme_wpset"
    local new_theme_command="twrp set wpset $apply_wpset"

    echo "Executing: $new_theme_command"
    twrp set wpset "$apply_wpset"
    
    echo "Updating $THEME_FILE with: $new_theme_command"
    if grep -q "^twrp set wpset" "$THEME_FILE" 2>/dev/null; then
        sed -i 's/^twrp set wpset [0-2]$/'"$new_theme_command"'/' "$THEME_FILE"
    else
        echo "$new_theme_command" >> "$THEME_FILE"
    fi
    
    chmod +x "$THEME_FILE"
    
    current_theme_wpset=$(((current_theme_wpset + 1) % 3))
}

clock_command() {
    local apply_state="$current_clock_state"
    local new_clock_command="twrp set tw_military_time $apply_state"
    
    echo "Executing: $new_clock_command"
    twrp set tw_military_time "$apply_state"

    echo "Updating $THEME_FILE with: $new_clock_command"
    if grep -q "^twrp set tw_military_time" "$THEME_FILE" 2>/dev/null; then
        sed -i 's/^twrp set tw_military_time [0-1]$/'"$new_clock_command"'/' "$THEME_FILE"
    else
        echo "$new_clock_command" >> "$THEME_FILE"
    fi
    
    chmod +x "$THEME_FILE"

    current_clock_state=$(((current_clock_state + 1) % 2))
}

navbar_command() {
    local apply_state="$current_navbar_state"
    local new_navbar_command="twrp set tw_samsung_navbar $apply_state"
    
    echo "Executing: $new_navbar_command"
    twrp set tw_samsung_navbar "$apply_state"

    echo "Updating $THEME_FILE with: $new_navbar_command"
    if grep -q "^twrp set tw_samsung_navbar" "$THEME_FILE" 2>/dev/null; then
        sed -i 's/^twrp set tw_samsung_navbar [0-1]$/'"$new_navbar_command"'/' "$THEME_FILE"
    else
        echo "$new_navbar_command" >> "$THEME_FILE"
    fi
    
    chmod +x "$THEME_FILE"

    current_navbar_state=$(((current_navbar_state + 1) % 2))
}

main_reboot_menu() {
    
    local selected_index=0
    local menu_key
    local display_name
    local command

    while true; do
        printf "\033c"
        
        local apply_theme_display=$((current_theme_wpset + 1))
        local theme_display_name="Set Theme to $apply_theme_display"
        
        local apply_navbar_text="On"
        if [[ "$current_navbar_state" -eq 1 ]]; then
            apply_navbar_text="Off"
        fi
        local navbar_display_name="Reverse Navbar: $apply_navbar_text"

        local apply_clock_text="24 Hour"
        if [[ "$current_clock_state" -eq 1 ]]; then
            apply_clock_text="12 Hour (AM/PM)"
        fi
        local clock_display_name="Clock Format: $apply_clock_text"


        printf "\n\n_OPTIONS\n"
        printf "=================================\n"
        printf "Select action to perform:\n"

        for ((i=0; i < OPTION_COUNT; i++)); do
            if [[ "$i" -eq 0 ]]; then
                display_name="$theme_display_name"
            elif [[ "$i" -eq 1 ]]; then
                display_name="$navbar_display_name"
            elif [[ "$i" -eq 2 ]]; then
                display_name="$clock_display_name"
            else
                display_name="${REBOOT_MENU_OPTIONS[i*2]}"
            fi

            if [[ "$i" -eq "$selected_index" ]]; then
                printf "> \033[7m%s\033[0m\n" "$display_name"
            else
                printf "  %s\n" "$display_name"
            fi
        done
        
        local lines_printed="$OPTION_COUNT"
        for (( j = lines_printed; j < VIEW_HEIGHT; j++ )); do
            echo
        done

        printf "=================================\n"
        printf "[vol+] Up | [vol-] Down | [power] Select | [power+vol-] Quit\n"


        stty -echo -icanon 2>/dev/null
        read -n 1 menu_key
        stty "$stty_orig" 2>/dev/null

        case "$menu_key" in
            j)
                if [ "$selected_index" -lt "$((OPTION_COUNT - 1))" ]; then
                    selected_index=$((selected_index + 1))
                fi
                ;;
            k)
                if [ "$selected_index" -gt 0 ]; then
                    selected_index=$((selected_index - 1))
                fi
                ;;
            l | $'\r' | $'\n')
                command="${REBOOT_MENU_OPTIONS[selected_index*2 + 1]}"
                
                printf "\033c" 
                
                if [ "$command" = "exit" ]; then
                    echo "Exiting menu."
                    exit 0
                fi
                
                case "$command" in
                    "theme_command")
                        theme_command
                        ;;
                    "navbar_command")
                        navbar_command
                        ;;
                    "clock_command")
                        clock_command
                        ;;
                    *)
                        echo "Executing: $command"
                        eval "$command"
                        ;;
                esac
                
                echo "Command returned without system change. Waiting 2 seconds..."
                sleep 2
                ;;
            q)
                break
                ;;
        esac
    done
}

main_reboot_menu

exit 0